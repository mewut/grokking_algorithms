// Бинарный поиск с рекурсией

function binarySearch(arr, target) {                     // arr - массив, в котором осуществляется поиск, target - целевое значение, которое нужно найти
    if (arr.length === 0) {                              // Проверяем, пустой ли arr. Если да, то...
        return -1;                                       // ...возвращаем -1, что означает, что целевое значение не найдено в массиве
    }

    let low = 0;                                         // Устанавливаем нижнюю границу поиска равной 0
    let high = arr.length - 1;                           // Устанавливаем верхнюю границу поиска равной индексу последнего элемента массива
    let mid = Math.floor((low + high) / 2);              // Вычисляем индекс среднего элемента массива

    if (arr[mid] === target) {                           // Проверяем, равен ли средний элемент массива целевому значению. Если да, то...
        return target;                                   // ...возвращаем целевое значение
    } else if (arr[mid] > target) {                      // Иначе, если средний элемент массива БОЛЬШЕ целевого значения, то...
        return binarySearch(arr.slice(0, mid), target);  // ...рекурсивно вызываем binarySearch для левой половины массива
    } else {
        return binarySearch(arr.slice(mid + 1), target); // Иначе, если средний элемент массива МЕНЬШЕ целевого значения, то...
    }                                                    // ...рекурсивно вызываем binarySearch для правой половины массива
}

console.log(binarySearch([6, 7, 8, 9, 10], 4));          // Вызываем функцию binarySearch для массива [6, 7, 8, 9, 10] и целевого значения 4
console.log(binarySearch([6, 7, 8, 9, 10], 6));          // Вызываем функцию binarySearch для массива [6, 7, 8, 9, 10] и целевого значения 6

// -1
// 6